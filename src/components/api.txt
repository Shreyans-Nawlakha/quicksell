https://apimocha.com/quicksell/data

***Additionally, the application should save the user's view state even after page reload.***

You are required to create an interactive Kanban board application using React JS that interacts with the provided API from **https://apimocha.com/quicksell/data**.

When a user clicks the "display" button and selects a grouping option, the Kanban board should dynamically adjust to reflect the user's choice.

The application should offer three distinct ways to group the data:

1. **By Status**: Group tickets based on their current status.
2. **By User**: Arrange tickets according to the assigned user.
3. **By Priority**: Group tickets based on their priority level.

Users should also be able to sort the displayed tickets in two ways:

1. **Priority**: Arrange tickets in descending order of priority.
2. **Title**: Sort tickets in ascending order based on their title.

**Priority levels: (This values you will receive in the api)**

4 - Urgent
3 - High
2 - Medium
1 - Low
0 - No priority


{
            "id": "CAM-1",
            "title": "Update User Profile Page UI",
            "tag": [
                "Feature request"
            ],
            "userId": "usr-1",
            "status": "Todo",
            "priority": 4
        },